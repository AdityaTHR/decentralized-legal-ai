# Akash Network GPU-Optimized Dockerfile
# HackOdisha 5.0 - Decentralized AI Legal Assistant

FROM nvidia/cuda:11.8-devel-ubuntu22.04

# Set environment variables for Akash Network
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0
ENV MODEL_CACHE_DIR=/app/models
ENV TRANSFORMERS_CACHE=/app/models/transformers
ENV SENTENCE_TRANSFORMERS_HOME=/app/models/sentence-transformers

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    tesseract-ocr \
    tesseract-ocr-ori \
    tesseract-ocr-hin \
    poppler-utils \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create model cache directory
RUN mkdir -p /app/models/transformers /app/models/sentence-transformers

# Copy requirements and install Python dependencies
COPY requirements-akash.txt requirements.txt
RUN pip3 install --no-cache-dir --upgrade pip
RUN pip3 install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
RUN pip3 install --no-cache-dir -r requirements.txt

# Download spaCy model
RUN python3 -m spacy download en_core_web_sm

# Pre-download AI models for faster startup on Akash
RUN python3 -c "from transformers import pipeline; pipeline('summarization', model='facebook/bart-large-cnn', cache_dir='/app/models/transformers')"
RUN python3 -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2', cache_folder='/app/models/sentence-transformers')"

# Copy application code
COPY akash_legal_ai.py document_ai.py ./
COPY static/ ./static/
COPY templates/ ./templates/

# Create upload directory
RUN mkdir -p /tmp/legal_uploads

# Set permissions
RUN chmod +x /app/*.py
RUN chown -R 1000:1000 /app

# Health check for Akash Network
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Command to run the application on Akash Network
CMD ["python3", "akash_legal_ai.py"]